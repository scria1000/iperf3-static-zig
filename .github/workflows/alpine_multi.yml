name: Build iperf3 multi static via zig

on: [workflow_dispatch]

env:
  DEBIAN_FRONTEND: noninteractive

  ZIG_DIST_VERSION: 0.13.0
  ZIG_DIST_SHA256_SUM: d45312e61ebcc48032b77bc4cf7fd6915c11fa16e4aad116b66c9468211230ea

  OPENSSL_DIST_VERSION: 3.3.1
  OPENSSL_DIST_SHA256_SUM: 777cd596284c883375a2a7a11bf5d2786fc5413255efab20c50d6ffe6d020b7e

  IPERF3_DIST_VERSION: 3.17.1
  IPERF3_DIST_SHA256_SUM: 84404ca8431b595e86c473d8f23d8bb102810001f15feaf610effd3b318788aa

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: write-all

jobs:
  build:
    name: ${{ format('{0} {1} {2} {3}', matrix.zig_target, matrix.zig_flags, matrix.openssl_target, matrix.openssl_flags) }}
    runs-on: ubuntu-latest
    container: 'alpine:3.20.1'
    strategy:
      fail-fast: false
      matrix:
        include:
          - { zig_target: mips-linux-musl, flag_filter: -latomic, openssl_target: linux-mips32, openssl_flags: -DBROKEN_CLANG_ATOMICS }
          - { zig_target: mips-linux-musl }
          - { zig_target: mipsel-linux-musl, flag_filter: -latomic, openssl_target: linux-mips32, openssl_flags: -DBROKEN_CLANG_ATOMICS }
          - { zig_target: mipsel-linux-musl }
          - { zig_target: mips64-linux-musl, openssl_target: linux64-mips64 }
          - { zig_target: mips64-linux-musl }
          - { zig_target: mips64el-linux-musl, openssl_target: linux64-mips64 }
          - { zig_target: mips64el-linux-musl }
          - { zig_target: riscv64-linux-musl, openssl_target: linux64-riscv64 }
          - { zig_target: riscv64-linux-musl }

    env:
      ZIG_TARGET: ${{ matrix.zig_target }}
      ZIG_FLAGS: ${{ matrix.zig_flags }}
      ZIG_CFLAGS: "-Wl,--build-id=sha1"
      ZIG_CXXFLAGS: "--static -static -std=c++17"
      ZIG_CPPFLAGS: "--static -static"
      ZIG_LDFLAGS: "--static -static"
      FLAG_FILTER: ${{ matrix.flag_filter }}
      OPENSSL_TARGET: ${{ matrix.openssl_target }}
      OPENSSL_FLAGS: ${{ matrix.openssl_flags }}

    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        if: ${{ job.container }}
        shell: sh
        run: |
          apk update && apk upgrade && apk add bash tar xz coreutils make perl

          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Setup Zig
        run: |
          /bin/sh setup-zig.sh

      - name: Build OpenSSL
        if: env.OPENSSL_TARGET != ''
        run: |
          cd $HOME
          /bin/sh $GITHUB_WORKSPACE/build-openssl.sh

      - name: Download iPerf
        run: |
          cd $HOME
          /bin/sh $GITHUB_WORKSPACE/build-iperf3.sh

      - name: Rename iperf3 to iperf3-${{ matrix.zig_target }}_openssl
        if: env.OPENSSL_TARGET != ''
        run: |
          mv -f $HOME/iperf3/bin/iperf3 $HOME/iperf3/bin/iperf3-${ZIG_TARGET}_openssl

      - name: Rename iperf3 to iperf3-${{ matrix.zig_target }}
        if: env.OPENSSL_TARGET == ''
        run: |
          mv -f $HOME/iperf3/bin/iperf3 $HOME/iperf3/bin/iperf3-$ZIG_TARGET

      - name: Create path to binary env
        if: env.OPENSSL_TARGET != ''
        run: echo "binary_path=$(echo ${{ runner.temp }}/_github_home/iperf3/bin/iperf3-${ZIG_TARGET}_openssl)" >> $GITHUB_ENV

      - name: Create path to binary env
        if: env.OPENSSL_TARGET == ''
        run: echo "binary_path=$(echo ${{ runner.temp }}/_github_home/iperf3/bin/iperf3-$ZIG_TARGET)" >> $GITHUB_ENV

      - name: Create tag env
        run: |
          echo "release_tag=$(sed -rn 's|(.*)\[(.*)],\[https://github.com/esnet/iperf],(.*)|\2|p' $HOME/iperf3/configure.ac)" >> $GITHUB_ENV

      - name: Attest artifact
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: '${{ runner.temp }}/_github_home/iperf3/bin/iperf3-*'

      - name: "Create release"
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          artifacts: ${{ env.binary_path }}
          replacesArtifacts: true
          tag: ${{ env.release_tag }}
          name: iperf3 ${{ env.release_tag }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
